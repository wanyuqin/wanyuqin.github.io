<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>日常学习 on My New Hugo Site</title>
    <link>http://localhost:1313/tags/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 日常学习 on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>设计模式</title>
      <link>http://localhost:1313/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%80/</guid>
      <description>&lt;h1 id=&#34;设计模式之基础知识&#34;&gt;设计模式之基础知识&lt;/h1&gt;&#xA;&lt;p&gt;模式：在特定环境下人们解决某类重复出现问题的一套成功或有效的解决方案&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;设计模式&#34;&gt;设计模式&lt;/h2&gt;&#xA;&lt;p&gt;一套被反复使用，多数人知晓的、经过分类编目的、代码设计经验的总结，使用设计模式是为了可重用代码、让代码让人更容易理解，并且保证代码的可靠性。&lt;/p&gt;&#xA;&lt;p&gt;根据设计模式的用途可以分为创造型、结构型、行为型&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;创造型：用于描述如何创建对象&lt;/li&gt;&#xA;&lt;li&gt;结构型：用于描述如何实现类和对象的组合&lt;/li&gt;&#xA;&lt;li&gt;行为型：用户描述类或对象怎样交互以及如何分配职责&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;uml&#34;&gt;UML&lt;/h2&gt;&#xA;&lt;p&gt;UML(Unified Modeling Language) 是一种统一建模语言，通过一些标准的图形符号和文字来对系统建模&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;视图&lt;/li&gt;&#xA;&lt;li&gt;图&lt;/li&gt;&#xA;&lt;li&gt;模型元素&lt;/li&gt;&#xA;&lt;li&gt;通用机制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;七个面向对象的设计原则&#34;&gt;七个面向对象的设计原则&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单一职责原则 SRP&lt;/li&gt;&#xA;&lt;li&gt;开闭原则 OCP&lt;/li&gt;&#xA;&lt;li&gt;里氏代换原则 LSP&lt;/li&gt;&#xA;&lt;li&gt;依赖倒转原则 DIP&lt;/li&gt;&#xA;&lt;li&gt;接口隔离原则 ISP&lt;/li&gt;&#xA;&lt;li&gt;合成复用原则 CRP&lt;/li&gt;&#xA;&lt;li&gt;迪米特法则 LoD&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
